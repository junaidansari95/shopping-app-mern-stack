{"ast":null,"code":"import { createStore, applyMiddleware, compose } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\n\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./Reducers\";\nimport { logger } from \"redux-logger\"; // import { composeWithDevTools } from \"redux-devtools-extension\";\n// eslint-disable-next-line\n\nconst initialState = {};\nconst middleware = [thunk, logger];\nconst persistConfig = {\n  key: 'root',\n  storage\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nlet store = createStore(persistedReducer, compose(applyMiddleware(...middleware)));\nconst persistor = persistStore(store);\nexport { store, persistor };","map":{"version":3,"sources":["/Users/junaid/Downloads/web-app-assignment-master/client/src/store.js"],"names":["createStore","applyMiddleware","compose","persistStore","persistReducer","storage","thunk","rootReducer","logger","initialState","middleware","persistConfig","key","persistedReducer","store","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB,C,CAAgD;;AAChD,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,YAAxB;AACA,SAASC,MAAT,QAAuB,cAAvB,C,CACA;AACA;;AACA,MAAMC,YAAY,GAAG,EAArB;AACA,MAAMC,UAAU,GAAG,CAACJ,KAAD,EAAQE,MAAR,CAAnB;AACA,MAAMG,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBP,EAAAA;AAFoB,CAAtB;AAIA,MAAMQ,gBAAgB,GAAGT,cAAc,CAACO,aAAD,EAAgBJ,WAAhB,CAAvC;AACA,IAAIO,KAAK,GAAGd,WAAW,CAAEa,gBAAF,EAAoBX,OAAO,CAACD,eAAe,CAAC,GAAGS,UAAJ,CAAhB,CAA3B,CAAvB;AACA,MAAMK,SAAS,GAAGZ,YAAY,CAACW,KAAD,CAA9B;AACA,SAASA,KAAT,EAAgBC,SAAhB","sourcesContent":["import { createStore, applyMiddleware, compose } from 'redux'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./Reducers\";\nimport { logger } from \"redux-logger\";\n// import { composeWithDevTools } from \"redux-devtools-extension\";\n// eslint-disable-next-line\nconst initialState = {};\nconst middleware = [thunk, logger];\nconst persistConfig = {\n  key: 'root',\n  storage,\n}\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\nlet store = createStore( persistedReducer, compose(applyMiddleware(...middleware)))\nconst persistor = persistStore(store)\nexport { store, persistor };"]},"metadata":{},"sourceType":"module"}